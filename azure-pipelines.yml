# 名称
name: $(Date:yyyyMMdd_HHmmss)

# 触発Trigger
trigger:
  - main

# エージェントプール
pool:
  name: SelfHostMac
  demands:
    - Agent.Name -equals mac-sony03

variables:
  PROJECT_NAME: 'Mobile'
  SCHEME_NAME: 'Mobile'
  CONFIGURATION: 'Release'
  SDKS: 'iphoneos'
  IOS_SPECIFIER: 'Mobile'
  IOS_TEAM_ID: '8H26AJ8X5P'
  IOS_P12_PASS: Dongying19911218
  IOS_P12_FILE: $(Agent.ToolsDirectory)/certs/ios/Mobile.p12
  IOS_PROVISION: $(Agent.ToolsDirectory)/certs/ios/Mobile.mobileprovision

jobs:
  - job: Setup
    displayName: ビルド・デプロイ
    steps:
      # 1. NodeJS依頼関係インストール
      - script: |
          echo "1. NodeJS依頼関係インストール"
          npm install
          bundle install
        displayName: ReactNative依頼関係インストール

      # 2. Podインストール
      - task: CocoaPods@0
        inputs:
          workingDirectory: 'ios'
          forceRepoUpdate: true
        displayName: PODインストール

      # 6. iOSビルド
      - script: |
          set -e
          xcodebuild clean -workspace $(System.DefaultWorkingDirectory)/ios/$(PROJECT_NAME).xcworkspace -scheme $(SCHEME_NAME) -configuration $(CONFIGURATION)
        displayName: iOSクリーン

      # 7. iOSアーカイブ
      - script: |
          set -e
          security import $(IOS_P12_FILE) -P $(IOS_P12_PASS) -A && security find-identity -v -p codesigning
        displayName: P12証明書インストール

      # 8. プロビジョニングプロファイルをインストール
      - script: |
          set -e
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $(IOS_PROVISION) ~/Library/MobileDevice/Provisioning\ Profiles/
        displayName: PROVISIONING_PROFILEインストール

      # 9. iOSアーカイブを作成
      - script: |
          set -e
          xcodebuild archive \
            -workspace $(System.DefaultWorkingDirectory)/ios/$(PROJECT_NAME).xcworkspace \
            -scheme $(PROJECT_NAME) \
            -configuration $(CONFIGURATION) \
            -archivePath $(System.DefaultWorkingDirectory)/ios/build/$(PROJECT_NAME).xcarchive \
            -sdk $(SDKS) \
            DEVELOPMENT_TEAM=$(IOS_TEAM_ID) \
            PROVISIONING_PROFILE_SPECIFIER="$(PROJECT_NAME)" \
            CODE_SIGN_IDENTITY="Apple Distribution"
        displayName: iOSアーカイブ

      # 10. Export IPA
      - script: |
          set -e
          xcodebuild \
            -exportArchive \
            -archivePath $(System.DefaultWorkingDirectory)/ios/build/$(PROJECT_NAME).xcarchive \
            -exportPath $(Build.ArtifactStagingDirectory)/ios \
            -exportOptionsPlist $(System.DefaultWorkingDirectory)/ios/ExportOptions.plist \
            -allowProvisioningUpdates
        displayName: IPA出力

      # 11. IPAファイル名称修正
      - script: |
          set -e
          cd ios
          SCHEME_NAME="pa"
          MARKETING_VERSION=$(xcodebuild -showBuildSettings | grep MARKETING_VERSION | head -1 | awk '{print $3}')
          CURRENT_PROJECT_VERSION=$(xcodebuild -showBuildSettings | grep CURRENT_PROJECT_VERSION | head -1 | awk '{print $3}')
          DATE=$(date +%Y%m%d)
          IPA_NAME="${PROJECT_NAME}-${CONFIGURATION}-$SCHEME_NAME-$MARKETING_VERSION-$CURRENT_PROJECT_VERSION-${DATE}"
          cd ..
          mv $(Build.ArtifactStagingDirectory)/ios/*.ipa $(Build.ArtifactStagingDirectory)/ios/$IPA_NAME
        displayName: 'Rename IPA File'

      # 12. 发布IPA为Artifact
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/ios'
          ArtifactName: 'ios'
          publishLocation: 'Container'
        displayName: Artifact配信